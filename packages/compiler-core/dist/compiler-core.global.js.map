{
  "version": 3,
  "sources": ["../src/index.ts", "../src/parse.ts"],
  "sourcesContent": ["import { parse } from './parse'\nimport { transform } from './transform'\n\nexport function compile(template) {\n    const templateAST = parse(template)\n\n    console.log('ast', templateAST)  \n\n    // const jsAST = transform(templateAST)\n    \n    // console.log('jsAst', jsAST)\n}\n", "import { NodeTypes } from \"./ast\"\n// there still has some problems\n\nfunction advancePositionWithMutation(context, endIndex) {\n    // line column offset\n    let linsCount = 0 // \u56DE\u8F66\u6570\n    let linePos = -1\n    for (let i = 0; i < endIndex; i++) {\n        if (context.source.charCodeAt(i) == 10) { // \u6362\u884C\u6216\u8005\u56DE\u8F66\n            linsCount ++\n            linePos = i\n        }\n    }\n\n    context.line += linsCount\n    if(linePos === -1) {\n        context.column += endIndex\n    } else {\n        context.column = endIndex - linePos\n    }\n\n    context.offset += endIndex\n\n}\n\nfunction advanceBy(context, endIndex) {\n\n    advancePositionWithMutation(context, endIndex)\n    \n    context.souce = context.source.slice(endIndex)\n}\n\nfunction parseTextData(context, endIndex) {\n    const rawText = context.source.slice(0, endIndex)\n    advanceBy(context, endIndex)\n    return rawText\n}\n\n\nfunction getCursor(context) {\n    const { line,column, offset} = context\n    return {\n        line,\n        column,\n        offset\n    }\n}\n\nfunction getSelection(context, start, end?)  {\n    end = end || getCursor(context)\n    return {\n        start,\n        end,\n        source: context.originSource.slice(start.offset, end.offset)\n    }\n}\n\nfunction parseText(context) {\n    const endTokens = ['{{', '<']\n    let lastIndex = context.source.length\n    for (let i = 0; i < endTokens.length; i++) {\n        const index = context.source.indexOf(endTokens[i])\n        if (index !== -1 && lastIndex > index) {\n            lastIndex = index\n        }\n    }\n\n    const start = getCursor(context)\n\n    const content = parseTextData(context, lastIndex)\n\n    return {\n        type: NodeTypes.TEXT,\n        loc: getSelection(context, start),\n        content\n    }\n}\n\n\nfunction parseChildren(context: Record<string, any>, template) {\n    let nodes =[]\n    let node = null\n    while(context.source) {\n        if (context.source.startsWith('<')) {\n            // \u6807\u7B7E\n            break\n        } else if (context.source.startsWith('{{')) {\n            // \u63D2\u503C\n            break\n        } else {\n            // \u6587\u672C\n            node = parseText(context)\n        }\n        nodes.push(node)\n    }\n\n    return nodes;\n}\n\nfunction createContext(source: string) {\n    return {\n        originSource: source,\n        source,\n        line: 1,\n        column: 1,\n        offset: 0\n    }\n}\n\nexport function parse(template: string) {\n    debugger\n    const context = createContext(template)\n    const nodes = parseChildren(context, template)\n    console.log(4444, nodes)\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACGA,uCAAqC,SAAS,UAAU;AAEpD,QAAI,YAAY;AAChB,QAAI,UAAU;AACd,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,UAAI,QAAQ,OAAO,WAAW,CAAC,KAAK,IAAI;AACpC;AACA,kBAAU;AAAA,MACd;AAAA,IACJ;AAEA,YAAQ,QAAQ;AAChB,QAAG,YAAY,IAAI;AACf,cAAQ,UAAU;AAAA,IACtB,OAAO;AACH,cAAQ,SAAS,WAAW;AAAA,IAChC;AAEA,YAAQ,UAAU;AAAA,EAEtB;AAEA,qBAAmB,SAAS,UAAU;AAElC,gCAA4B,SAAS,QAAQ;AAE7C,YAAQ,QAAQ,QAAQ,OAAO,MAAM,QAAQ;AAAA,EACjD;AAEA,yBAAuB,SAAS,UAAU;AACtC,UAAM,UAAU,QAAQ,OAAO,MAAM,GAAG,QAAQ;AAChD,cAAU,SAAS,QAAQ;AAC3B,WAAO;AAAA,EACX;AAGA,qBAAmB,SAAS;AACxB,UAAM,EAAE,MAAK,QAAQ,WAAU;AAC/B,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEA,wBAAsB,SAAS,OAAO,KAAO;AACzC,UAAM,OAAO,UAAU,OAAO;AAC9B,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA,QAAQ,QAAQ,aAAa,MAAM,MAAM,QAAQ,IAAI,MAAM;AAAA,IAC/D;AAAA,EACJ;AAEA,qBAAmB,SAAS;AACxB,UAAM,YAAY,CAAC,MAAM,GAAG;AAC5B,QAAI,YAAY,QAAQ,OAAO;AAC/B,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,YAAM,QAAQ,QAAQ,OAAO,QAAQ,UAAU,EAAE;AACjD,UAAI,UAAU,MAAM,YAAY,OAAO;AACnC,oBAAY;AAAA,MAChB;AAAA,IACJ;AAEA,UAAM,QAAQ,UAAU,OAAO;AAE/B,UAAM,UAAU,cAAc,SAAS,SAAS;AAEhD,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,aAAa,SAAS,KAAK;AAAA,MAChC;AAAA,IACJ;AAAA,EACJ;AAGA,yBAAuB,SAA8B,UAAU;AAC3D,QAAI,QAAO,CAAC;AACZ,QAAI,OAAO;AACX,WAAM,QAAQ,QAAQ;AAClB,UAAI,QAAQ,OAAO,WAAW,GAAG,GAAG;AAEhC;AAAA,MACJ,WAAW,QAAQ,OAAO,WAAW,IAAI,GAAG;AAExC;AAAA,MACJ,OAAO;AAEH,eAAO,UAAU,OAAO;AAAA,MAC5B;AACA,YAAM,KAAK,IAAI;AAAA,IACnB;AAEA,WAAO;AAAA,EACX;AAEA,yBAAuB,QAAgB;AACnC,WAAO;AAAA,MACH,cAAc;AAAA,MACd;AAAA,MACA,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,IACZ;AAAA,EACJ;AAEO,iBAAe,UAAkB;AACpC;AACA,UAAM,UAAU,cAAc,QAAQ;AACtC,UAAM,QAAQ,cAAc,SAAS,QAAQ;AAC7C,YAAQ,IAAI,MAAM,KAAK;AAAA,EAC3B;;;AD/GO,mBAAiB,UAAU;AAC9B,UAAM,cAAc,MAAM,QAAQ;AAElC,YAAQ,IAAI,OAAO,WAAW;AAAA,EAKlC;",
  "names": []
}
