{
  "version": 3,
  "sources": ["../src/index.ts", "../src/nodeOps.ts", "../src/module/class.ts", "../src/module/style.ts", "../src/module/event.ts", "../src/module/attr.ts", "../src/patchProp.ts", "../../runtime-core/src/vnode.ts", "../../runtime-core/src/renderer.ts", "../../runtime-core/src/h.ts"],
  "sourcesContent": ["import nodeOps from './nodeOps'\nimport { patchProp } from './patchProp'\nimport { createRenderer } from '@vue3/runtime-core'\nexport * from '@vue3/runtime-core'\nexport * from './patchProp'\nconst renderOptons = Object.assign(nodeOps, { patchProp})\n\n// createRenderer(renderOptons).render()\n\nexport function render(vnode, container) {\n    createRenderer(renderOptons).render(vnode, container)\n}", "export default {\n    // \u589E\u5220\u6539\u67E5\n    insert(child, parent, anchor = null) {\n        parent.insertBefore(child, anchor)\n    },\n\n    createElement(tagName) {\n        return document.createElement(tagName)\n    },\n\n    createText(text) {\n        return document.createTextNode(text)\n    },\n\n    remove(child)  {\n        const parentNode = child.parentNode\n        if (parentNode) {\n            parentNode.removeChild(child)\n        }\n    },\n\n    setElementText(el, text) {\n        el.textContent = text\n    },\n\n    // \u6587\u672C\u8282\u70B9 document.createTextNode()\n    setText(node, text) {\n        node.nodeValue = text\n    },\n\n    querySelector(selector) {\n        return document.querySelector(selector)\n    },\n\n    parentNode(node) {\n        return node.parentNode\n    },\n\n    nextSibling(node) {\n        return node.nextSibling\n    }\n}", "export default function patchClass(el, newValue) {\n    if (!newValue) return el.removeAttribute('class')\n    el.className = newValue\n}", "export default function patchStyle(el, oldValue, newValue) {\n    for (let key in newValue) {\n        el.style[key] = newValue[key]\n    }\n    if (!oldValue) return;\n\n    for (let key in oldValue) {\n        if (!newValue[key]) {\n            el.style[key] = null\n        }\n    }\n    \n}", "function createInvoker(callback) {\n    const invoker = (e) => invoker.value(e)\n\n    invoker.value = callback\n\n    return invoker\n}\n\nexport default function patchEvent(el, eventName, callback) {\n    const _store = el._store || (el._store = {})\n    let exsit = _store[eventName]\n    const event = eventName.slice(2).toLowerCase()\n    if (exsit) {\n        exsit.value = callback\n        if (!callback) {\n            el.removeEventListener(event, exsit)\n            _store[eventName] = undefined\n        }\n    } else {\n        const invoker = _store[eventName] = createInvoker(callback)\n        el.addEventListener(event, invoker)\n    }\n}", "export default function attr(el, key, nextValue) {\n    if (!nextValue) {\n        el.removeAttribute(key)\n    } else {\n        el.setAttribute(el, key, nextValue)\n    }\n}", "import patchClass from './module/class'\nimport patchStyle from './module/style'\nimport patchEvent from './module/event'\nimport patchAttr from './module/attr'\nexport function patchProp(el, key, preValue, nextValue) {\n    if (key === 'class') {\n        patchClass(el, nextValue)\n    } else if (key === 'style') {\n        patchStyle(el, preValue, nextValue)\n    } else if (/^on[^a-z][a-z]+/.test(key)) {\n        patchEvent(el, key, nextValue)\n    } else {\n        patchAttr(el, key, nextValue)\n    }\n}", "import { ShapeFlags } from '@vue3/shared'\n\nexport function createVNode(type, props, children) {\n    let ShapeFlag = 0\n    let vnode = {\n        __v_isVnode: true,\n        type,\n        props,\n        ShapeFlag,\n        children,\n        key: props?.key\n    }\n    delete props.key\n    if (typeof type === 'string') {\n        vnode.ShapeFlag = ShapeFlags.ELEMENT\n    }\n\n    if (children) {\n        let type = 0\n        if (Array.isArray(children)) {\n            type = ShapeFlags.ARRAY_CHILDREN\n        } else {\n            type = ShapeFlags.TEXT_CHILDREN\n        }\n\n        vnode.ShapeFlag |= type\n    }\n\n    return vnode\n}\n\nexport function isSameVnode (n1, n2) {\n    return n1.type === n2.type && n1.key === n2.key\n}", "import { ShapeFlags } from \"@vue3/shared\"\nimport { onUnmounted } from \"vue\"\nimport { createVNode, isSameVnode } from \"./vnode\"\n\nexport const Text = Symbol.for('Text')\nexport const Fragment = Symbol.for('Fragment')\n\nexport function createRenderer(renderOptions) {\n    let {\n        // \u589E\u5220\u6539\u67E5\n        insert: hostInsert,\n        createElement: hostCreateElement,\n        createText: hostCreateText,\n        remove: hostRemove,\n        setElementText: hostSetElementText,\n        setText: hostSetText,\n        querySelector: hostQuerySelector,\n        parentNode: hostParentNode,\n        nextSibling: hostNextSibling,\n        patchProp: hostPatchProp\n    } = renderOptions\n\n    const mountChildren = (container, children) => {\n        children.forEach((child, i) => {\n            patch(null, child, container)\n        })\n    }\n\n    const mountElement = (vnode, container, anchor = null) => {\n        vnode.el = hostCreateElement(vnode.type)\n        for (let key in vnode.props) {\n            hostPatchProp(vnode.el, key, null, vnode.props[key])\n        }\n        if (vnode.ShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n            mountChildren(vnode.el, vnode.children)\n        } else  if (vnode.ShapeFlag & ShapeFlags.TEXT_CHILDREN) {\n            hostSetElementText(vnode.el, vnode.children)\n        }\n        hostInsert(vnode.el, container, anchor)\n    }\n\n    const patchProps = (el, preProps, nextProps) => {\n        for (let key in nextProps) {\n            hostPatchProp(el, key, preProps[key], nextProps[key])\n        }\n\n        for (let key in preProps) {\n            if (!nextProps[key]) {\n                hostPatchProp(el, key, preProps[key], null)\n            }\n\n        }\n    }\n\n    const unmountChildren = vnode => {\n        vnode.children.forEach(child => {\n            unmount(child)\n        })\n    }\n\n    // \u83B7\u53D6\u6700\u957F\u5B50\u589E\u5B50\u5E8F\u5217\u7684\u4E0B\u6807 [3, 4, 7\uFF0C 9, 5]\n    function getSequce(arr) {\n        const rs = [0]\n        const prefix = new Array(arr.length).fill(undefined)\n        \n        for (let i = 1; i < arr.length; i++) {\n            if (arr[i] === 0) {\n                continue\n            }\n            let lastIndex = rs[rs.length-1]\n            const cur = arr[i]\n            if (cur > arr[lastIndex]) {\n                prefix[i] = lastIndex\n                rs.push(i)\n            } else {\n                let start = 0\n                let end = rs.length-1\n                let mid = Math.floor((end + start) / 2)       \n                while(start < end) {\n                    if (arr[rs[mid]] < cur) {\n                        start = mid + 1\n                    } else {\n                        end = mid\n                    }\n                    mid = Math.floor(( end + start ) / 2)  \n                }\n\n\n                if (arr[rs[start]] > cur) {\n                    prefix[i] = rs[start-1]\n                    rs[start] = i\n                }\n            }\n        }\n        let i = rs.length-1\n        let last = rs[i]\n        while(i) {\n            rs[i] = last\n            last = prefix[last]\n            i--\n        }\n        return rs;\n    }\n    \n\n    const patchKeyedChildren = (el, n1, n2) => {\n        const c1 = n1.children\n        const c2 = n2.children\n        let i = 0 \n        let e1 = c1.length - 1\n        let e2 = c2.length - 1\n        // \u8DF3\u8FC7\u524D\u5E8F\u76F8\u540C\u7684\n        while(i <= e1 && i <= e2) {\n            const n1 = c1[i]\n            const n2 = c2[i]\n            if (isSameVnode(n1, n2)) {\n                patch(n1, n2, el)\n                i ++\n            } else {\n                break;\n            }\n        }\n\n        // \u8DF3\u8FC7\u540E\u5E8F\u76F8\u540C\u7684\n        while(i <= e1 && i <= e2) {\n            const n1 = c1[e1]\n            const n2 = c2[e2]\n            if (isSameVnode(n1, n2)) {\n                patch(n1, n2, el)\n                e1 --\n                e2 --\n            } else {\n                break;\n            }\n        }\n        // \u540C\u5E8F\u5217\u65B0\u589E\n        // \u5982\u679C i \u5927\u4E8E e1 \u8BF4\u660E\u6709\u65B0\u589E\u7684, i\u8DDFe2\u4E4B\u95F4\u7684\u8282\u70B9\u5C31\u662F\u8981\u65B0\u589E\u7684\n        if (i > e1) {\n            while(i <= e2) {\n                const nextIndex = e2 + 1\n                const anchor = nextIndex < c2.length ? c2[nextIndex].el : null\n                patch(null, c2[i++], el, anchor)\n            }\n        }\n\n        // \u540C\u5E8F\u5217\u5220\u9664\n        // \u5982\u679Ci \u5927\u4E8E e2 \u8BF4\u660E  \u6709\u8981\u5220\u9664\u7684 i\u8DDFe1\u4E4B\u95F4\u7684\u8282\u70B9\u5C31\u662F\u8981\u5220\u9664\u7684\n        if (i > e2) {\n            while(i <= e1) {\n                unmount(c1[i++])\n            }\n        }\n\n        // \u4F18\u5316\u5B8C\u6BD5 \u5F00\u59CB\u4E71\u5E8F\u6BD4\u5BF9\n        // \u65B0\u7684key\u503C\u548C\u4E0B\u6807\u7684\u6620\u5C04\u8868\n        const newKeyMap = {}\n        const s1 = i\n        const s2 = i\n        for (let i = s2; i <= e2; i++) {\n            const cur = c2[i]\n            newKeyMap[cur.key] = i\n        }\n        // \u904D\u5386\u8001children \u6807\u8BB0\u9700\u8981\u79FB\u52A8\u7684\uFF0C \u4EE5\u53CA\u5220\u9664\u591A\u4F59\u7684\n        const toBePatched = e2 - s2 + 1\n        // xin l\n        const patchedArr = new Array(toBePatched).fill(0)\n        for (let i = s1; i <= e1; i++) {\n            const newIndex = newKeyMap[c1[i].key]\n            if (newIndex === undefined) {\n                // \u5728\u65B0children \u6CA1\u627E\u5230 \u5219\u8981\u5220\u9664\n                unmount(c1[i])\n            } else {\n                // patchedMap[newIndex] = i+1\n                patchedArr[newIndex - s2] = i+1\n                const anchor = newIndex + 1 < c2.length ? c2[newIndex+1] : null\n                patch(c1[i], c2[newIndex], el, anchor)\n            }\n        }\n        const longestPatchedArr = getSequce(patchedArr)\n        let j = longestPatchedArr.length - 1\n\n        // \u8BE5\u79FB\u52A8\u7684\u79FB\u52A8 \u8BE5\u65B0\u589E\u7684\u65B0\u589E\n        for (let i = patchedArr.length-1; i >=0; i--) {\n            const index = i + s2\n            const current = c2[index]\n            const anchor = index + 1 < c2.length ? c2[index+1].el : null\n            if (patchedArr[i] === 0) {\n                patch(null, c2[index], el, anchor)\n            } else {\n                if (i !== longestPatchedArr[j]) {\n                    hostInsert(current.el, el, anchor)\n                } else {\n                    j --\n                    // \u6CA1\u52A8\n                    console.log('\u6CA1\u52A8', current.key)\n                }\n            }\n        }\n    }\n\n    const patchChildren = (el, n1, n2) => {\n        const shapeFlag = n2.ShapeFlag\n        const preShapeFlag = n1.ShapeFlag\n        const c1 = n1.children \n        const c2 = n2.children\n        if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n            // \u73B0\u5728\u662F\u6587\u672C\n            if (preShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n                // \u4E4B\u524D\u6709\u513F\u5B50\n                unmountChildren(n1)\n            }\n            if (c1 !== c2) {\n                hostSetElementText(el, c2)\n            }\n        } else {\n            // \u73B0\u5728\u662F\u6570\u7EC4\u6216\u7A7A\n            if (preShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n                if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n                // \u4E4B\u524D\u662F\u6570\u7EC4 \u73B0\u5728\u4E5F\u662F\u6570\u7EC4 diff\u7B97\u6CD5               \n                    patchKeyedChildren(el, n1, n2)\n                } else {\n                    // \u4E4B\u524D\u662F\u6570\u7EC4 \u73B0\u5728\u662F\u7A7A\n                    unmountChildren(n1)\n                }\n            } else {\n                // \u4E4B\u524D\u662F\u6587\u672C\n                if (preShapeFlag & ShapeFlags.TEXT_CHILDREN) {\n                    hostSetElementText(el, '')\n                }\n                if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n                    mountChildren(el, c2)\n                }\n                // hostSetElementText(el, null)\n            }\n        }\n    }\n\n    const patchElement = ( n1, n2) => {\n        const el = n2.el = n1.el\n        patchProps(el, n1.props, n2.props)\n        patchChildren(el, n1, n2)\n    }\n\n    const processElement = (n1, n2, container, anchor = null) => {\n        if (!n1) {\n            mountElement(n2, container, anchor)\n        } else {\n            patchElement(n1, n2)\n        }\n    }\n\n    const processText = (n1, n2, container) => {\n        if (!n1) {\n            hostInsert(n2.el = hostCreateText(n2.children), container)\n        } else if (n1.children !== n2.children) {\n            const el = n2.el = n1.el\n            hostSetText(el, n2.children)\n        }\n    }\n\n    const processFragment  = (n1, n2, container) => {\n        if (!n1) {\n            mountChildren(container, n2.children)\n        } else {\n            patchChildren(n1, n2, container)\n        }\n    }\n\n    const patch = (n1, n2, container, anchor = null) => {\n        if (n1 && !isSameVnode(n1, n2)) {\n            unmount(n1)\n            n1 = null\n        }\n        switch(n2.type) {\n            case Text:\n                processText(n1, n2, container)\n                break;\n            case Fragment:\n                processFragment(n1, n2, container)\n                break;\n            default :\n                processElement(n1, n2, container, anchor)\n                break;\n        }\n    }\n\n    const unmount = (vnode) => {\n        hostRemove(vnode.el)\n    }\n\n    const render = (vnode, container) => {\n        if (!vnode) {\n            // \u5378\u8F7D\n            container._vnode && unmount(container._vnode)\n        } else {\n            patch(container._vnode || null, vnode, container)\n        }\n\n        container._vnode = vnode\n    }\n\n    return {\n        render\n    }\n}\n", "import { createVNode } from './vnode'\n\nexport function h(type, props, children) {\n    return createVNode(type, props, children)\n}"],
  "mappings": "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",
  "names": []
}
